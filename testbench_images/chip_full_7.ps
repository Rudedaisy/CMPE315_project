%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Unknown
%%Title: Window .printEngine1.page.layout
%%CreationDate: Tue Nov 13 23:57:49 2018
%%BoundingBox: 0 0 613 793
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Fixed
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog

%%BeginSetup
/CL 2 def
%%IncludeResource: font Fixed
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
90 rotate
0.96 0.96 scale
0 -638 translate
0 638 moveto 825 638 lineto 825 0 lineto 0 0 lineto closepath clip newpath
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
788 601 [
[(Page 1 of 1)]
] 13 -1 0 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
788 37 [
[(Printed by SimVision from Cadence Design Systems, Inc.)]
] 13 -1 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
37 37 [
[(Printed on Tue Nov 13 11:57:47 PM EST 2018)]
] 13 -0 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
37 601 [
[(chip_full_7 - SimVision)]
] 13 -0 0 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 524 [
[(Cursor-Baseline = )]
] 13 -1 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 524 [
[(6300ns)]
] 13 -0 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 538 [
[(Baseline = )]
] 13 -1 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 538 [
[(0)]
] 13 -0 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 552 [
[(Cursor = )]
] 13 -1 1 0 false DrawText
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
145 552 [
[(6300ns)]
] 13 -0 1 0 false DrawText
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
37 301 translate
1.04167 1.03286 scale
0 -8 translate
0 8 168 221 SetClipRegion
%% including "/tmp/tmp1sl3221.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.slist
%%CreationDate: Tue Nov 13 23:57:48 2018
%%BoundingBox: 0 8 168 221
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Fixed
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Fixed
%%EndSetup

%%Page: 1 1
save
0.0 220.0 translate
0.9596 0.9596 scale
0 -220 translate
0 220 moveto 175 220 lineto 175 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 220 moveto
175 220 lineto
175 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 220 moveto
174 220 lineto
174 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 219 moveto
173 219 lineto
173 199 lineto
1 199 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 199 moveto
173 199 lineto
173 179 lineto
1 179 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 179 moveto
173 179 lineto
173 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
173 159 lineto
173 139 lineto
1 139 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 139 moveto
173 139 lineto
173 119 lineto
1 119 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 119 moveto
173 119 lineto
173 99 lineto
1 99 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 99 moveto
173 99 lineto
173 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
173 79 lineto
173 59 lineto
1 59 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 59 moveto
173 59 lineto
173 39 lineto
1 39 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 39 moveto
173 39 lineto
173 19 lineto
1 19 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 19 moveto
173 19 lineto
173 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 208 moveto
10 8 lineto
stroke
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 208 moveto
26 208 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 212 moveto
13 212 lineto
13 204 lineto
6 204 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 212 moveto
14 212 lineto
14 204 lineto
6 204 lineto
closepath
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 208 moveto
12 208 lineto
stroke
10 210 moveto
10 206 lineto
stroke
grestore
gsave
22 201 translate
/TkPhoto { 
  gsave 
  32 dict begin 
  /tinteger exch def 
  /transparent 1 string def 
  transparent 0 tinteger put 
  /olddict exch def 
  olddict /DataSource get dup type /filetype ne { 
    olddict /DataSource 3 -1 roll 
    0 () /SubFileDecode filter put 
  } { 
    pop 
  } ifelse 
  /newdict olddict maxlength dict def 
  olddict newdict copy pop 
  /w newdict /Width get def 
  /crpp newdict /Decode get length 2 idiv def 
  /str w string def 
  /pix w crpp mul string def 
  /substrlen 2 w log 2 log div floor exp cvi def 
  /substrs [ 
  { 
     substrlen string 
     0 1 substrlen 1 sub { 
       1 index exch tinteger put 
     } for 
     /substrlen substrlen 2 idiv def 
     substrlen 0 eq {exit} if 
  } loop 
  ] def 
  /h newdict /Height get def 
  1 w div 1 h div matrix scale 
  olddict /ImageMatrix get exch matrix concatmatrix 
  matrix invertmatrix concat 
  newdict /Height 1 put 
  newdict /DataSource pix put 
  /mat [w 0 0 h 0 0] def 
  newdict /ImageMatrix mat put 
  0 1 h 1 sub { 
    mat 5 3 -1 roll neg put 
    olddict /DataSource get str readstring pop pop 
    /tail str def 
    /x 0 def 
    olddict /DataSource get pix readstring pop pop 
    { 
      tail transparent search dup /done exch not def 
      {exch pop exch pop} if 
      /w1 exch length def 
      w1 0 ne { 
        newdict /DataSource  pix x crpp mul w1 crpp mul getinterval put 
        newdict /Width w1 put 
        mat 4 x neg put 
        /x x w1 add def 
        newdict image 
        /tail tail w1 tail length w1 sub getinterval def 
      } if 
      done {exit} if 
      tail substrs { 
        anchorsearch {pop} if 
      } forall 
      /tail exch def 
      tail length 0 eq {exit} if 
      /x w tail length sub def 
    } loop 
  } for 
  end 
  grestore 
} bind def 


/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 203 [
[(clk_count)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 188 moveto
26 188 lineto
stroke
grestore
gsave
24 182 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 183 [
[(clk)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 168 moveto
26 168 lineto
stroke
grestore
gsave
24 162 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 163 [
[(reset)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 148 moveto
26 148 lineto
stroke
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 152 moveto
13 152 lineto
13 144 lineto
6 144 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 152 moveto
14 152 lineto
14 144 lineto
6 144 lineto
closepath
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 148 moveto
12 148 lineto
stroke
10 150 moveto
10 146 lineto
stroke
grestore
gsave
22 141 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 143 [
[(cpu_add)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 128 moveto
26 128 lineto
stroke
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 132 moveto
13 132 lineto
13 124 lineto
6 124 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 132 moveto
14 132 lineto
14 124 lineto
6 124 lineto
closepath
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 128 moveto
12 128 lineto
stroke
10 130 moveto
10 126 lineto
stroke
grestore
gsave
22 121 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 123 [
[(cpu_data)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 108 moveto
26 108 lineto
stroke
grestore
gsave
24 102 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 103 [
[(cpu_rd_wrn)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 88 moveto
26 88 lineto
stroke
grestore
gsave
24 82 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 83 [
[(start)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 68 moveto
26 68 lineto
stroke
grestore
gsave
24 62 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 63 [
[(busy)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 48 moveto
26 48 lineto
stroke
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 52 moveto
13 52 lineto
13 44 lineto
6 44 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 52 moveto
14 52 lineto
14 44 lineto
6 44 lineto
closepath
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 48 moveto
12 48 lineto
stroke
10 50 moveto
10 46 lineto
stroke
grestore
gsave
22 41 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 43 [
[(mem_add)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 28 moveto
26 28 lineto
stroke
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 32 moveto
13 32 lineto
13 24 lineto
6 24 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
6 32 moveto
14 32 lineto
14 24 lineto
6 24 lineto
closepath
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 28 moveto
12 28 lineto
stroke
10 30 moveto
10 26 lineto
stroke
grestore
gsave
22 21 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 22
  /Height 14
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 14]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
010101FFFFFFFFFFFFFFFFFF01010101010101010101000000000000000000
4B618C4E65914E65914E65914E65914E65914E65914E65914B618B000000
000000000000000000000000000000000000000000000000000000010101
FFFFFFFFFFFFFFFFFF010101010101010101010000000000000000004E6591
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
000000000000000000000000000000000000000000000000010101FFFFFF
FFFFFFFFFFFFFFFFFF010101010101010000000000000000004E6591E9ECF5
788DC15E74A34E65914E65914E65914E65914E65914E65914E65914B618B
00000000000000000000000000000000000000000001FFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101010101000000FFFF00FFFF00536994D5DBEC7C90C3
4E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000
00000000000000000000000000000000000001FFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF01010101000000FFFF00FFFF0060759CC6CDE48699C74E6591
E9ECF5788DC15E74A34E65914E65914E65914E65914E65914E65914E6591
4B618C00000000000000000000000001FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF01010101000000FFFF00FFFF0060759CFFFF00FFFF004E6591D4DAEB
788DC14E6591FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591
000000000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101010100000000000000000060759CFFFF00FFFF0060759CC6CDE48699C7
4E6591E9ECF5788DC1788DC1788DC1788DC1788DC1E9ECF54E6591000000
000000000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01
0100000000000000000060759CFFFF00FFFF0060759CFFFF00FFFF004E6591
D4DAEB788DC1FFFFFFFFFFFFFFFFFF788DC1D4DAEB4E6591FFFF00FFFF00
000000000000010101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000
00000000000055678A60759C60759C60759CFFFF00FFFF004E6591BFC7E1
788DC1FFFFFF788DC1FFFFFF788DC1BFC7E14E6591FFFF00FFFF00000000
000000010101010101FFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
00000000000000000000000060759CFFFF00FFFF004E6591A9B5D7FFFFFF
FFFFFF788DC1FFFFFFFFFFFFA9B5D74E6591FFFF00FFFF00000000000000
010101010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000
00000000000000000054668A60759C60759C4E659198A7CF788DC1788DC1
788DC1788DC1788DC198A7CF4E6591000000000000000000000000010101
010101010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000
0000000000000000000000000000004E6591889AC8788DC1788DC1788DC1
788DC1788DC1889AC84E6591000000000000000000000000010101010101
010101FFFFFFFFFFFFFFFFFF01010101000000000000000000000000000000
00000000000000000000000044587E4E65914E65914E65914E65914E6591
4E65914E659144587E000000000000000000000000010101010101010101
01010101010101010101010101000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 23 [
[(mem_data)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.800 0.800 0.800 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
10 8 moveto
26 8 lineto
stroke
grestore
gsave
24 2 translate
/DeviceRGB setcolorspace

<<
  /ImageType 1
  /Width 20
  /Height 12
  /BitsPerComponent 8
  /DataSource currentfile  /ASCIIHexDecode filter
  /ImageMatrix [1 0 0 -1 0 12]
  /Decode [0 1 0 1 0 1]
>>
1 TkPhoto
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4B618B4E65914E65914E65914E65914E65914E65914E65914E65914E6591
4E6591495F8800000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF010101010000000000000000000000004E6591FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4E6591000000000000
00000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000
0000000000004E6591F0F2F8788DC1788DC1788DC1788DC1788DC1788DC1
788DC1788DC1F0F2F84E659100000000000000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E6591E1E5F1
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1E1E5F14E6591
0000000000000000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0101000000000000FFFF00FFFF004E6591D2D8EA788DC1788DC1FFFFFFFFFFFF
FFFFFFFFFFFF788DC1788DC1D2D8EA4E6591FFFF00FFFF00000000000000
0101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000FFFF00FFFF00
4E6591C3CBE3788DC1788DC1FFFFFF788DC1788DC1FFFFFF788DC1788DC1
C3CBE34E6591FFFF00FFFF000000000000000101FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF0101000000000000FFFF00FFFF004E6591B4BEDC788DC1788DC1
FFFFFF788DC1788DC1FFFFFF788DC1788DC1B4BEDC4E6591FFFF00FFFF00
0000000000000101FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0101000000000000
FFFF00FFFF004E6591A5B2D5FFFFFFFFFFFFFFFFFF788DC1788DC1FFFFFF
FFFFFFFFFFFFA5B2D54E6591FFFF00FFFF0000000000000001010101FFFF
FFFFFFFFFFFFFFFFFFFF010101010000000000000000000000004E65919AA8D0
788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC19AA8D04E6591
00000000000000000000000001010101FFFFFFFFFFFFFFFFFFFFFFFF0101
01010000000000000000000000004E65918F9FCB788DC1788DC1788DC1788DC1
788DC1788DC1788DC1788DC18F9FCB4E6591000000000000000000000000
01010101FFFFFFFFFFFFFFFFFFFFFFFF01010101000000000000000000000000
4E65918396C6788DC1788DC1788DC1788DC1788DC1788DC1788DC1788DC1
8396C64E659100000000000000000000000001010101FFFFFFFFFFFFFFFF
FFFFFFFF01010101000000000000000000000000475B834E65914E65914E6591
4E65914E65914E65914E65914E65914E65914E659144587F000000000000
000000000000>
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
48 3 [
[(mem_en)]
] 13 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
211 301 translate
1.04054 1.03286 scale
0 -8 translate
0 8 74 221 SetClipRegion
%% including "/tmp/tmp1sd3221.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sdata
%%CreationDate: Tue Nov 13 23:57:48 2018
%%BoundingBox: 0 8 74 221
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Fixed
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Fixed
%%EndSetup

%%Page: 1 1
save
0.0 220.0 translate
0.9596 0.9596 scale
0 -220 translate
0 220 moveto 77 220 lineto 77 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 220 moveto
77 220 lineto
77 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 220 moveto
76 220 lineto
76 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 219 moveto
75 219 lineto
75 199 lineto
1 199 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 204 [
[('d626)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 199 moveto
75 199 lineto
75 179 lineto
1 179 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 184 [
[(0)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 179 moveto
75 179 lineto
75 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 164 [
[(0)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
75 159 lineto
75 139 lineto
1 139 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 144 [
[('hzz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 139 moveto
75 139 lineto
75 119 lineto
1 119 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 124 [
[('hzz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 119 moveto
75 119 lineto
75 99 lineto
1 99 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 104 [
[(Z)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 99 moveto
75 99 lineto
75 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 84 [
[(0)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
75 79 lineto
75 59 lineto
1 59 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 64 [
[(0)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 59 moveto
75 59 lineto
75 39 lineto
1 39 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 44 [
[('hzz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 39 moveto
75 39 lineto
75 19 lineto
1 19 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 24 [
[('hzz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 19 moveto
75 19 lineto
75 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 4 [
[(0)]
] 13 0 0.85 0 false DrawText
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
287 301 translate
1.04141 1.03286 scale
0 -8 translate
0 8 483 221 SetClipRegion
%% including "/tmp/tmp1sb3221.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.sbox
%%CreationDate: Tue Nov 13 23:57:48 2018
%%BoundingBox: 0 8 483 221
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Fixed
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Fixed
%%EndSetup

%%Page: 1 1
save
0.0 220.0 translate
0.9596 0.9596 scale
0 -220 translate
0 220 moveto 503 220 lineto 503 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 220 moveto
503 220 lineto
503 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
0 220 moveto
502 220 lineto
502 0 lineto
0 0 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 219 moveto
501 219 lineto
501 199 lineto
1 199 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 199 moveto
501 199 lineto
501 179 lineto
1 179 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 179 moveto
501 179 lineto
501 159 lineto
1 159 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 159 moveto
501 159 lineto
501 139 lineto
1 139 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 139 moveto
501 139 lineto
501 119 lineto
1 119 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 119 moveto
501 119 lineto
501 99 lineto
1 99 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 99 moveto
501 99 lineto
501 79 lineto
1 79 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 79 moveto
501 79 lineto
501 59 lineto
1 59 lineto
closepath
fill
grestore
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 59 moveto
501 59 lineto
501 39 lineto
1 39 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 39 moveto
501 39 lineto
501 19 lineto
1 19 lineto
closepath
fill
grestore
gsave
0.200 0.200 0.200 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 19 moveto
501 19 lineto
501 -1 lineto
1 -1 lineto
closepath
fill
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-10 209 moveto
-8 217 lineto
0 217 lineto
2 209 lineto
0 201 lineto
-8 201 lineto
-10 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 209 moveto
4 217 lineto
12 217 lineto
14 209 lineto
12 201 lineto
4 201 lineto
2 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 209 moveto
16 217 lineto
24 217 lineto
26 209 lineto
24 201 lineto
16 201 lineto
14 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
26 209 moveto
28 217 lineto
36 217 lineto
38 209 lineto
36 201 lineto
28 201 lineto
26 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
38 209 moveto
40 217 lineto
48 217 lineto
50 209 lineto
48 201 lineto
40 201 lineto
38 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
50 209 moveto
52 217 lineto
60 217 lineto
62 209 lineto
60 201 lineto
52 201 lineto
50 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
62 209 moveto
64 217 lineto
72 217 lineto
74 209 lineto
72 201 lineto
64 201 lineto
62 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
74 209 moveto
76 217 lineto
84 217 lineto
86 209 lineto
84 201 lineto
76 201 lineto
74 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
86 209 moveto
88 217 lineto
96 217 lineto
98 209 lineto
96 201 lineto
88 201 lineto
86 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
98 209 moveto
100 217 lineto
108 217 lineto
110 209 lineto
108 201 lineto
100 201 lineto
98 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
110 209 moveto
112 217 lineto
120 217 lineto
122 209 lineto
120 201 lineto
112 201 lineto
110 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
122 209 moveto
124 217 lineto
132 217 lineto
134 209 lineto
132 201 lineto
124 201 lineto
122 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
134 209 moveto
136 217 lineto
144 217 lineto
146 209 lineto
144 201 lineto
136 201 lineto
134 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
146 209 moveto
148 217 lineto
156 217 lineto
158 209 lineto
156 201 lineto
148 201 lineto
146 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 209 moveto
160 217 lineto
168 217 lineto
170 209 lineto
168 201 lineto
160 201 lineto
158 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
170 209 moveto
172 217 lineto
180 217 lineto
182 209 lineto
180 201 lineto
172 201 lineto
170 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 209 moveto
184 217 lineto
192 217 lineto
194 209 lineto
192 201 lineto
184 201 lineto
182 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
194 209 moveto
196 217 lineto
204 217 lineto
206 209 lineto
204 201 lineto
196 201 lineto
194 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
206 209 moveto
208 217 lineto
216 217 lineto
218 209 lineto
216 201 lineto
208 201 lineto
206 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
218 209 moveto
220 217 lineto
228 217 lineto
230 209 lineto
228 201 lineto
220 201 lineto
218 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
230 209 moveto
232 217 lineto
240 217 lineto
242 209 lineto
240 201 lineto
232 201 lineto
230 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 209 moveto
244 217 lineto
252 217 lineto
254 209 lineto
252 201 lineto
244 201 lineto
242 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 209 moveto
256 217 lineto
264 217 lineto
266 209 lineto
264 201 lineto
256 201 lineto
254 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
266 209 moveto
268 217 lineto
276 217 lineto
278 209 lineto
276 201 lineto
268 201 lineto
266 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
278 209 moveto
280 217 lineto
288 217 lineto
290 209 lineto
288 201 lineto
280 201 lineto
278 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
290 209 moveto
292 217 lineto
300 217 lineto
302 209 lineto
300 201 lineto
292 201 lineto
290 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
302 209 moveto
304 217 lineto
312 217 lineto
314 209 lineto
312 201 lineto
304 201 lineto
302 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
314 209 moveto
316 217 lineto
324 217 lineto
326 209 lineto
324 201 lineto
316 201 lineto
314 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
326 209 moveto
328 217 lineto
336 217 lineto
338 209 lineto
336 201 lineto
328 201 lineto
326 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
338 209 moveto
340 217 lineto
348 217 lineto
350 209 lineto
348 201 lineto
340 201 lineto
338 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 209 moveto
352 217 lineto
360 217 lineto
362 209 lineto
360 201 lineto
352 201 lineto
350 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
362 209 moveto
364 217 lineto
372 217 lineto
374 209 lineto
372 201 lineto
364 201 lineto
362 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
374 209 moveto
376 217 lineto
384 217 lineto
386 209 lineto
384 201 lineto
376 201 lineto
374 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
386 209 moveto
388 217 lineto
396 217 lineto
398 209 lineto
396 201 lineto
388 201 lineto
386 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
398 209 moveto
400 217 lineto
408 217 lineto
410 209 lineto
408 201 lineto
400 201 lineto
398 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
410 209 moveto
412 217 lineto
420 217 lineto
422 209 lineto
420 201 lineto
412 201 lineto
410 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
422 209 moveto
424 217 lineto
432 217 lineto
434 209 lineto
432 201 lineto
424 201 lineto
422 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
434 209 moveto
436 217 lineto
444 217 lineto
446 209 lineto
444 201 lineto
436 201 lineto
434 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
446 209 moveto
448 217 lineto
456 217 lineto
458 209 lineto
456 201 lineto
448 201 lineto
446 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
458 209 moveto
460 217 lineto
468 217 lineto
470 209 lineto
468 201 lineto
460 201 lineto
458 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
470 209 moveto
472 217 lineto
480 217 lineto
482 209 lineto
480 201 lineto
472 201 lineto
470 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 209 moveto
484 217 lineto
492 217 lineto
494 209 lineto
492 201 lineto
484 201 lineto
482 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 209 moveto
496 217 lineto
504 217 lineto
506 209 lineto
504 201 lineto
496 201 lineto
494 209 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-4 197 moveto
-4 181 lineto
2 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 181 moveto
2 197 lineto
8 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 197 moveto
8 181 lineto
14 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 181 moveto
14 197 lineto
20 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
20 197 moveto
20 181 lineto
26 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
26 181 moveto
26 197 lineto
32 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
32 197 moveto
32 181 lineto
38 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
38 181 moveto
38 197 lineto
44 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
44 197 moveto
44 181 lineto
50 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
50 181 moveto
50 197 lineto
56 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
56 197 moveto
56 181 lineto
62 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
62 181 moveto
62 197 lineto
68 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
68 197 moveto
68 181 lineto
74 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
74 181 moveto
74 197 lineto
80 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
80 197 moveto
80 181 lineto
86 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
86 181 moveto
86 197 lineto
92 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
92 197 moveto
92 181 lineto
98 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
98 181 moveto
98 197 lineto
104 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
104 197 moveto
104 181 lineto
110 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
110 181 moveto
110 197 lineto
116 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
116 197 moveto
116 181 lineto
122 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
122 181 moveto
122 197 lineto
128 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
128 197 moveto
128 181 lineto
134 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
134 181 moveto
134 197 lineto
140 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
140 197 moveto
140 181 lineto
146 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
146 181 moveto
146 197 lineto
152 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
152 197 moveto
152 181 lineto
158 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 181 moveto
158 197 lineto
164 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
164 197 moveto
164 181 lineto
170 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
170 181 moveto
170 197 lineto
176 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
176 197 moveto
176 181 lineto
182 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 181 moveto
182 197 lineto
188 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
188 197 moveto
188 181 lineto
194 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
194 181 moveto
194 197 lineto
200 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
200 197 moveto
200 181 lineto
206 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
206 181 moveto
206 197 lineto
212 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
212 197 moveto
212 181 lineto
218 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
218 181 moveto
218 197 lineto
224 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
224 197 moveto
224 181 lineto
230 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
230 181 moveto
230 197 lineto
236 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
236 197 moveto
236 181 lineto
242 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 181 moveto
242 197 lineto
248 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
248 197 moveto
248 181 lineto
254 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 181 moveto
254 197 lineto
260 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
260 197 moveto
260 181 lineto
266 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
266 181 moveto
266 197 lineto
272 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 197 moveto
272 181 lineto
278 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
278 181 moveto
278 197 lineto
284 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
284 197 moveto
284 181 lineto
290 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
290 181 moveto
290 197 lineto
296 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
296 197 moveto
296 181 lineto
302 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
302 181 moveto
302 197 lineto
308 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
308 197 moveto
308 181 lineto
314 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
314 181 moveto
314 197 lineto
320 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
320 197 moveto
320 181 lineto
326 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
326 181 moveto
326 197 lineto
332 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
332 197 moveto
332 181 lineto
338 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
338 181 moveto
338 197 lineto
344 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
344 197 moveto
344 181 lineto
350 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 181 moveto
350 197 lineto
356 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 197 moveto
356 181 lineto
362 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
362 181 moveto
362 197 lineto
368 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
368 197 moveto
368 181 lineto
374 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
374 181 moveto
374 197 lineto
380 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
380 197 moveto
380 181 lineto
386 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
386 181 moveto
386 197 lineto
392 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
392 197 moveto
392 181 lineto
398 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
398 181 moveto
398 197 lineto
404 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
404 197 moveto
404 181 lineto
410 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
410 181 moveto
410 197 lineto
416 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
416 197 moveto
416 181 lineto
422 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
422 181 moveto
422 197 lineto
428 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
428 197 moveto
428 181 lineto
434 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
434 181 moveto
434 197 lineto
440 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
440 197 moveto
440 181 lineto
446 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
446 181 moveto
446 197 lineto
452 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
452 197 moveto
452 181 lineto
458 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
458 181 moveto
458 197 lineto
464 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
464 197 moveto
464 181 lineto
470 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
470 181 moveto
470 197 lineto
476 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
476 197 moveto
476 181 lineto
482 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 181 moveto
482 197 lineto
488 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
488 197 moveto
488 181 lineto
494 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 181 moveto
494 197 lineto
500 197 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
500 197 moveto
500 181 lineto
506 181 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-2892 161 moveto
4648 161 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-226 149 moveto
2 149 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 149 moveto
4 157 lineto
12 157 lineto
14 149 lineto
12 141 lineto
4 141 lineto
2 149 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 149 moveto
242 149 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
16 144 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 149 moveto
244 157 lineto
252 157 lineto
254 149 lineto
252 141 lineto
244 141 lineto
242 149 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 149 moveto
482 149 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
256 144 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 149 moveto
484 157 lineto
492 157 lineto
494 149 lineto
492 141 lineto
484 141 lineto
482 149 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 149 moveto
722 149 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
496 144 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-4 129 moveto
224 129 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 124 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
224 129 moveto
226 137 lineto
234 137 lineto
236 129 lineto
234 121 lineto
226 121 lineto
224 129 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
236 129 moveto
464 129 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
238 124 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
464 129 moveto
466 137 lineto
474 137 lineto
476 129 lineto
474 121 lineto
466 121 lineto
464 129 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
476 129 moveto
704 129 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
478 124 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-226 109 moveto
2 109 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 109 moveto
2 117 lineto
14 117 lineto
stroke
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 117 moveto
14 109 lineto
242 109 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 109 moveto
242 117 lineto
254 117 lineto
stroke
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 117 moveto
254 109 lineto
482 109 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 109 moveto
482 117 lineto
494 117 lineto
stroke
grestore
gsave
1.000 0.600 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 117 moveto
494 109 lineto
722 109 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-226 81 moveto
2 81 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
2 81 moveto
2 97 lineto
14 97 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 97 moveto
14 81 lineto
242 81 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
242 81 moveto
242 97 lineto
254 97 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 97 moveto
254 81 lineto
482 81 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
482 81 moveto
482 97 lineto
494 97 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 97 moveto
494 81 lineto
722 81 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-16 61 moveto
8 61 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
8 61 moveto
8 77 lineto
224 77 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
224 77 moveto
224 61 lineto
248 61 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
248 61 moveto
248 77 lineto
464 77 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
464 77 moveto
464 61 lineto
488 61 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
488 61 moveto
488 77 lineto
704 77 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-208 49 moveto
20 49 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 44 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
20 49 moveto
22 57 lineto
30 57 lineto
32 49 lineto
30 41 lineto
22 41 lineto
20 49 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
32 49 moveto
260 49 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
34 44 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
260 49 moveto
262 57 lineto
270 57 lineto
272 49 lineto
270 41 lineto
262 41 lineto
260 49 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 49 moveto
500 49 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
274 44 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
500 49 moveto
502 57 lineto
510 57 lineto
512 49 lineto
510 41 lineto
502 41 lineto
500 49 lineto
stroke
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-28 29 moveto
116 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
3 24 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
116 29 moveto
118 37 lineto
138 37 lineto
140 29 lineto
138 21 lineto
118 21 lineto
116 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
122 24 [
[(41)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
140 29 moveto
142 37 lineto
162 37 lineto
164 29 lineto
162 21 lineto
142 21 lineto
140 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
146 24 [
[(42)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
164 29 moveto
166 37 lineto
186 37 lineto
188 29 lineto
186 21 lineto
166 21 lineto
164 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
170 24 [
[(43)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
188 29 moveto
190 37 lineto
210 37 lineto
212 29 lineto
210 21 lineto
190 21 lineto
188 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
194 24 [
[(44)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
212 29 moveto
356 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
214 24 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
356 29 moveto
358 37 lineto
378 37 lineto
380 29 lineto
378 21 lineto
358 21 lineto
356 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
362 24 [
[(51)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
380 29 moveto
382 37 lineto
402 37 lineto
404 29 lineto
402 21 lineto
382 21 lineto
380 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
386 24 [
[(52)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
404 29 moveto
406 37 lineto
426 37 lineto
428 29 lineto
426 21 lineto
406 21 lineto
404 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
410 24 [
[(53)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
428 29 moveto
430 37 lineto
450 37 lineto
452 29 lineto
450 21 lineto
430 21 lineto
428 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
434 24 [
[(54)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 0.647 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
452 29 moveto
596 29 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
454 24 [
[(zz)]
] 13 0 0.85 0 false DrawText
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-208 1 moveto
20 1 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
20 1 moveto
20 17 lineto
32 17 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
32 17 moveto
32 1 lineto
260 1 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
260 1 moveto
260 17 lineto
272 17 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
272 17 moveto
272 1 lineto
500 1 lineto
stroke
grestore
gsave
0.000 1.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
500 1 moveto
500 17 lineto
512 17 lineto
stroke
grestore
gsave
0 220 moveto
503 220 lineto
503 0 lineto
0 0 lineto
closepath
clip
newpath
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
gsave

% including file "lib/blt2.4/bltCanvEps.pro"

%
% PostScript encapulator prolog file of the BLT "eps" canvas item.
%
% Copyright 1991-1997 Bell Labs Innovations for Lucent Technologies.
%
% Permission to use, copy, modify, and distribute this software and its
% documentation for any purpose and without fee is hereby granted, provided
% that the above copyright notice appear in all copies and that both that the
% copyright notice and warranty disclaimer appear in supporting documentation,
% and that the names of Lucent Technologies any of their entities not be used
% in advertising or publicity pertaining to distribution of the software
% without specific, written prior permission.
%
% Lucent Technologies disclaims all warranties with regard to this software,
% including all implied warranties of merchantability and fitness.  In no event
% shall Lucent Technologies be liable for any special, indirect or
% consequential damages or any damages whatsoever resulting from loss of use,
% data or profits, whether in an action of contract, negligence or other
% tortuous action, arising out of or in connection with the use or performance
% of this software.
%

%
% The definitions of the next two macros are from Appendix H of 
% Adobe's "PostScript Language Reference Manual" pp. 709-736.
% 

% Prepare for EPS file

/BeginEPSF {				
  /beforeInclusionState save def
  /dictCount countdictstack def		% Save the # objects in the dictionary
  /opCount count 1 sub def		% Count object on operator stack
  userdict begin			% Make "userdict" the current 
					% dictionary
    /showpage {} def			% Redefine showpage to be null
    0 setgray 
    0 setlinecap
    1 setlinewidth
    0 setlinejoin
    10 setmiterlimit
    [] 0 setdash
    newpath
    /languagellevel where {
      pop languagelevel 
      1 ne {
	false setstrokeadjust false setoverprint
      } if
    } if
    % note: no "end"
} bind def

/EndEPSF { %def
  count opCount sub {
    pop
  } repeat
  countdictstack dictCount sub { 
  end					% Clean up dictionary stack
  } repeat
  beforeInclusionState restore
} bind def


%
% Set up a clip region based upon a bounding box (x1, y1, x2, y2).
%
/SetClipRegion {
  % Stack: x1 y1 x2 y2
  newpath
  4 2 roll moveto
  1 index 0 rlineto
  0 exch rlineto
  neg 0 rlineto
  closepath
  clip
  newpath
} def

BeginEPSF
287 521 translate
1.04141 1.01515 scale
0 -2 translate
0 2 483 68 SetClipRegion
%% including "/tmp/tmp1mx3221.ps"

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Maxim Widget
%%Title: Window .printEngine1.raw.maxis
%%CreationDate: Tue Nov 13 23:57:49 2018
%%BoundingBox: 0 2 483 68
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Fixed
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Fixed
%%EndSetup

%%Page: 1 1
save
0.0 67.0 translate
0.9596 0.9596 scale
0 -67 translate
0 67 moveto 503 67 lineto 503 0 lineto 0 0 lineto closepath clip newpath
gsave
gsave
0 67 moveto
503 67 lineto
503 0 lineto
0 0 lineto
closepath
clip
newpath
gsave
0.000 0.000 0.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
1 66 moveto
501 66 lineto
501 1 lineto
1 1 lineto
closepath
fill
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
-34 1 moveto
-34 18 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
-32 7 [
[(2400ns)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
14 1 moveto
14 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
38 1 moveto
38 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
62 1 moveto
62 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
86 1 moveto
86 18 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
88 7 [
[(2500ns)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
110 1 moveto
110 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
134 1 moveto
134 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
158 1 moveto
158 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
182 1 moveto
182 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
206 1 moveto
206 18 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
208 7 [
[(2600ns)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
230 1 moveto
230 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
254 1 moveto
254 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
278 1 moveto
278 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
302 1 moveto
302 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
326 1 moveto
326 18 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
328 7 [
[(2700ns)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
350 1 moveto
350 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
374 1 moveto
374 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
398 1 moveto
398 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
422 1 moveto
422 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
446 1 moveto
446 18 lineto
stroke
grestore
gsave
/Fixed findfont 12 scalefont ISOEncode setfont
1.000 1.000 1.000 setrgbcolor AdjustColor
448 7 [
[(2800ns)]
] 13 0 0.85 0 false DrawText
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
470 1 moveto
470 3 lineto
stroke
grestore
gsave
1.000 1.000 1.000 setrgbcolor AdjustColor
0 setlinecap
0 setlinejoin
1 setlinewidth
494 1 moveto
494 3 lineto
stroke
grestore
grestore
grestore
restore showpage

%%Trailer
end
%%EOF

EndEPSF
grestore
restore showpage

%%Trailer
end
%%EOF

